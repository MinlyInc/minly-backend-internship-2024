import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateMovieDirector1721042379636 implements MigrationInterface {
    name = 'CreateMovieDirector1721042379636'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "director" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "first_name" character varying(300) NOT NULL, "last_name" character varying(300) NOT NULL, "birthdate" TIMESTAMP WITH TIME ZONE NOT NULL, "bio" character varying(1000) NOT NULL, "nationality" character varying(300), "created_at" TIMESTAMP WITH TIME ZONE NOT NULL, "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL, "uuid" uuid NOT NULL, "picture" character varying, "number_of_awards" bigint, CONSTRAINT "PK_b85b179882f31c43324ef124fea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "movie" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "title" character varying(300) NOT NULL, "release_date" TIMESTAMP WITH TIME ZONE NOT NULL, "poster" character varying(1000), "avg_rating" numeric, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL, "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL, "uuid" uuid NOT NULL, "trailer" character varying, "directorIdId" integer, CONSTRAINT "PK_cb3bb4d61cf764dc035cbedd422" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "movie" ADD CONSTRAINT "FK_706e4603ead757166724676efbc" FOREIGN KEY ("directorIdId") REFERENCES "director"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "movie" DROP CONSTRAINT "FK_706e4603ead757166724676efbc"`);
        await queryRunner.query(`DROP TABLE "movie"`);
        await queryRunner.query(`DROP TABLE "director"`);
    }

}
